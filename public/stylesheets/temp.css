.place .front h2 {
  height: 30px;
  line-height: 30px;
  font-size: 20px;
  margin: -50px 0 0;
  color: #ccc;
}

.place .front .distance {
  height: 20px;
  line-height: 20px;
  font-size: 16px;
  margin: 0;
  color: #ccc;
}

body 
{
	margin: 0px;
	-webkit-user-select: none;
}

/* styles stolen from apple's cardflip example */

body {
  -webkit-user-select: none;
}

.places {
  /* Disable tap highlighting */
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	
	/* Give some depth to the card */
	/*-webkit-perspective: 600;*/
	width: 320px;
}

.place {
  position: relative;
  width: 320px;
  height: 480px;
  
  /* Ensure that the card lives correctly in 3D space */
	-webkit-transform-style: preserve-3d;
	
	/* We apply this property to the card so it can smoothly flip between its sides */
	-webkit-transition-property: -webkit-transform;
	/* Make the animation occur over a period of 1.5 seconds */
	-webkit-transition-duration: 1.5s;
}

.place.flipped {
  /* Rotate the card 180 degrees along the y-axis. This animation allows the card to
	  toggle between its regular and flipped states. */
	-webkit-transform: rotateY(180deg);
}

.place .face {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
	/* Give a round layout to the card */
/*  -webkit-border-radius: 10px;*/
	/* Drop shadow around the card */
/*    -webkit-box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.5);*/
	/* Make sure that users will not be able to select anything on the card */
	
	/* We create the card by stacking two div elements at the exact same location. The back of the card 
	   is shown when we rotated the card 180 degrees along the y-axis. Setting this property to hidden
	   ensures that the "back side" is hidden when the card is flipped
	*/
	-webkit-backface-visibility: hidden;
}

.place .back {
	background-color: #ccc;
  color: #fff;
  /* Ensure the "back side" is flipped already */
  -webkit-transform: rotateY(180deg);
}